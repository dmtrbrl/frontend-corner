name: CI/CD

env:
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [crawler, frontend]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node-pnpm
      - name: Build ${{ matrix.target }}
        run: pnpm run ${{ matrix.target }}:build

  lint:
    name: Lint ${{ matrix.target }}
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        target: [crawler, frontend]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node-pnpm
      - name: Lint ${{ matrix.target }}
        run: pnpm run ${{ matrix.target }}:lint

  deploy-preview:
    name: Vercel Preview Deployment
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: [build, lint]

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node-pnpm
      - uses: ./.github/actions/check-deploy-needed
        id: changes

      - name: Skip if no relevant changes
        if: steps.changes.outputs.should_deploy == 'false'
        run: echo "✅ Skipping preview deploy (no changes)" && exit 78

      - name: Install Vercel CLI
        run: pnpm dlx vercel@latest --version

      - name: Pull Vercel Environment Info
        run: pnpm dlx vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: pnpm dlx vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Preview to Vercel
        run: pnpm dlx vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

  deploy-prod:
    name: Vercel Production Deployment
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [build, lint]

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node-pnpm
      - uses: ./.github/actions/check-deploy-needed
        id: changes

      - name: Skip if no relevant changes
        if: steps.changes.outputs.should_deploy == 'false'
        run: echo "✅ Skipping production deploy (no changes)" && exit 78

      - name: Install Vercel CLI
        run: pnpm dlx vercel@latest --version

      - name: Pull Vercel Environment Info
        run: pnpm dlx vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: pnpm dlx vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel (Production)
        run: pnpm dlx vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
