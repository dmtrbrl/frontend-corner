name: CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [crawler, frontend]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node-pnpm
      - name: Build ${{ matrix.target }}
        run: pnpm run ${{ matrix.target }}:build

  lint:
    name: Lint ${{ matrix.target }}
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        target: [crawler, frontend, shared]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node-pnpm
      - name: Lint ${{ matrix.target }}
        run: pnpm run ${{ matrix.target }}:lint

  deploy:
    name: Vercel Deployment
    runs-on: ubuntu-latest
    needs: [build, lint]
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'

    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node-pnpm

      - name: Pull Vercel Environment Info
        run: |
          ENVIRONMENT=$( [ "${{ github.event_name }}" = "pull_request" ] && echo "preview" || echo "production" )
          pnpm dlx vercel pull --yes --environment=$ENVIRONMENT --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: |
          FLAG=$( [ "${{ github.ref }}" = "refs/heads/main" ] && echo "--prod" || echo "" )
          pnpm dlx vercel build $FLAG --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel
        run: |
          FLAG=$( [ "${{ github.ref }}" = "refs/heads/main" ] && echo "--prod" || echo "" )
          pnpm dlx vercel deploy --prebuilt $FLAG --token=${{ secrets.VERCEL_TOKEN }}
